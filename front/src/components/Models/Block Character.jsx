/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Block Character.glb -T -S 
Files: Block Character.glb [38.65KB] > D:\S7\Webcup2024\webcup2024\front\public\models\Block Character.glb [10.34KB] (73%)
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { useGraph } from "@react-three/fiber";
import React, { useMemo, useRef } from "react";
import * as SkeletonUtils from "three/addons/utils/SkeletonUtils.js";
export function BlockCharacter(props) {
  const group = useRef();
  const { scene, materials, animations } = useGLTF(
    "/models/Block Character.glb"
  );
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  React.useEffect(() => {
    actions["Armature|Jump.001"].reset().fadeIn(2).play();
    return () => {};
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group
          name="Armature"
          position={[0, 0.593, 0.05]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          <primitive object={nodes.Root} />
        </group>
        <group
          name="Player"
          position={[-0.006, 0.79, 0.074]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={55.481}
        >
          <skinnedMesh
            name="Player_1"
            geometry={nodes.Player_1.geometry}
            material={materials.body}
            skeleton={nodes.Player_1.skeleton}
          >
            <meshStandardMaterial color={"#ffffff"} />
          </skinnedMesh>
          <skinnedMesh
            name="Player_2"
            geometry={nodes.Player_2.geometry}
            material={materials.eye_color}
            skeleton={nodes.Player_2.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models//Block Character.glb");
