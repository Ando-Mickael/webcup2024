/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 storm.glb -T -S 
Files: storm.glb [1.93MB] > D:\S7\Webcup2024\webcup2024\front\public\models\storm-transformed.glb [86.54KB] (96%)
*/

import { useGLTF } from "@react-three/drei";
import { useFrame, useGraph } from "@react-three/fiber";
import React, { useMemo, useRef } from "react";
import * as SkeletonUtils from "three/addons/utils/SkeletonUtils.js";

export function Storm(props) {
  const group = useRef();
  const { scene, materials } = useGLTF("/models/storm.glb");
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);
  useFrame(({}) => {
    if (!group.current) return;
    group.current.rotation.y += 0.01;
  });
  return (
    <group {...props} ref={group} dispose={null}>
      <group
        position={[0.404, 2.339, 0.076]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          geometry={nodes.Circle_1.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          geometry={nodes.Circle_2.geometry}
          material={materials.PaletteMaterial003}
        />
        <mesh
          geometry={nodes.Circle_3.geometry}
          material={materials.PaletteMaterial001}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/storm.glb");
